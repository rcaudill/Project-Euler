package euler.problems;
import java.util.ArrayList;


public class Problem002 {

	/**
	 * @euler_problem Problem 2
	 * @euler_problem_description Each new term in the Fibonacci sequence is 
	 * generated by adding the previous two terms. By starting with 1 and 2, 
	 * the first 10 terms will be:
	 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
	 * Find the sum of all the even-valued terms in the sequence which do not
	 * exceed four million.
	 */
	public Problem002() {
		run(4000000);
	}
	
	public static long run(int limit) {
		long sum = 0;
		ArrayList<Integer> fibonacciSequence = getFibonacciSequence(limit);
		for (Integer i : fibonacciSequence) {
			if (i%2==0) {
				sum+=i;
			}
		}
		return sum;
	}
	private static ArrayList<Integer> getFibonacciSequence(int limit) {
		ArrayList<Integer> sequence = new ArrayList<Integer>();
		sequence.add(1);
		sequence.add(2);
		while(sequence.get(sequence.size()-1)<=limit) {
			int temp = sequence.get(sequence.size()-2)+sequence.get(sequence.size()-1);
			sequence.add(temp);
		}
		return sequence;
	}
}
